// üí° Aprender programa√ß√£o √© dif√≠cil, e √†s vezes d√° vontade de pedir pra IA fazer tudo por n√≥s.
// Mas o objetivo aqui n√£o √© s√≥ ter o resultado, √© aprender o caminho at√© ele.
// Pesquise, teste, erre e tente de novo. √â assim que voc√™ evolui e chega na sua primeira vaga em TI! üöÄ

// Fique livre para me perguntar sobre qualquer assunto pelo Whatsapp, estarei dispon√≠vel para te ajudar!

// ==========================================================
// üèéÔ∏è Projeto: C√°lculo de gasto de combust√≠vel para jogar bola
// ==========================================================
//
// Objetivo: Usar vari√°veis, objetos e opera√ß√µes matem√°ticas
// para calcular quanto custa ir jogar bola de carro.
//
// Conceitos que vamos aprender:
// - Declara√ß√£o de vari√°veis (let e const)
// - Tipos primitivos (number, string, boolean)
// - Objetos e propriedades
// - Opera√ß√µes matem√°ticas
// - Interpola√ß√£o de strings (template literals)
// - Introdu√ß√£o a fun√ß√µes
// ==========================================================


// ===============================
// üöó Definindo vari√°veis base
// ===============================

// `const` ‚Üí usado para valores que N√ÉO mudam no programa.
const distanciaAteOCampo = 30; // tipo: number (representa um valor num√©rico em km)

// `let` ‚Üí usado quando o valor pode mudar.
let numeroDeViagens = 1; // tipo: number


// ===============================
// üöò Criando um objeto para representar o carro
// ===============================
//
// Um objeto √© uma estrutura que agrupa informa√ß√µes relacionadas.
// Ele tem propriedades (nome, kmPorLitro).
//
const carro = {
  nome: "Onix",       // tipo: string ‚Üí sequ√™ncia de caracteres
  kmPorLitro: 12,     // tipo: number ‚Üí consumo m√©dio de combust√≠vel
};


// ===============================
// ‚õΩ Pre√ßo do combust√≠vel
// ===============================
const precoCombustivel = 6.10;


// ===============================
// üßÆ C√°lculos
// ===============================
//
// Aqui usamos opera√ß√µes matem√°ticas b√°sicas:
// + (adi√ß√£o), - (subtra√ß√£o), * (multiplica√ß√£o), / (divis√£o)
//
const distanciaTotal = distanciaAteOCampo * 2;
const kmTotal = distanciaTotal * numeroDeViagens;
const litrosGastos = kmTotal / carro.kmPorLitro;
const custoTotal = litrosGastos * precoCombustivel;


// ===============================
// üìä Exibi√ß√£o do resultado
// ===============================
//
// Usamos `console.log()` para exibir informa√ß√µes no terminal.
//
console.log(`üèÅ Carro: ${carro.nome}`);
console.log(`üöó Dist√¢ncia total: ${kmTotal} km`);
console.log(`‚õΩ Gasto total de combust√≠vel: ${litrosGastos.toFixed(2)} litros`);
console.log(`üí∞ Custo total: R$ ${custoTotal.toFixed(2)}`);

// ===============================
// üß† Desafios e exerc√≠cios
// ===============================
//
// 1Ô∏è‚É£ Mude o n√∫mero de viagens e veja como isso afeta o custo total.
// 2Ô∏è‚É£ Crie outro carro (ex: "Civic", "Uno") e troque o objeto `carro` para comparar.
// 3Ô∏è‚É£ Adicione uma vari√°vel para o pre√ßo do ped√°gio e inclua no c√°lculo total.


// ===============================
// üß† Fun√ß√µes em JavaScript
// ===============================
//
// Uma fun√ß√£o √© um bloco de c√≥digo reutiliz√°vel que executa uma tarefa espec√≠fica.
// Voc√™ pode ‚Äúchamar‚Äù a fun√ß√£o quantas vezes quiser, passando valores diferentes.
//
// Sintaxe b√°sica:
//
// function nomeDaFuncao(param1, param2) {
//   // c√≥digo que a fun√ß√£o executa
//   return resultado; // opcional ‚Äî usado quando queremos devolver um valor
// }
//
// Exemplo pr√°tico abaixo üëá
// ===============================

function calcularGasto(distancia, viagens, carro, precoCombustivel) {
  // Multiplica a dist√¢ncia (ida e volta) pelo n√∫mero de viagens
  const kmTotal = distancia * 2 * viagens;

  // Divide a dist√¢ncia total pelo consumo do carro (km/l)
  const litros = kmTotal / carro.kmPorLitro;

  // Calcula o custo total
  const custo = litros * precoCombustivel;

  // Retorna o valor calculado para quem chamou a fun√ß√£o
  return custo;
}

// Chamando (executando) a fun√ß√£o e exibindo o resultado
const gastoComOnix = calcularGasto(30, 4, carro, 6.10);
console.log(`\nüîπ Gasto calculado pela fun√ß√£o: R$ ${gastoComOnix.toFixed(2)}`);


// ===============================
// üí™ Desafio Extra!
// ===============================
//
// 4Ô∏è‚É£ Crie uma fun√ß√£o chamada `compararCarros()` que receba DOIS carros diferentes
//     e diga qual deles √© mais econ√¥mico no c√°lculo total.
//     - A fun√ß√£o deve usar `calcularGasto()` dentro dela.
//
// Exemplo do que ela poderia mostrar no console:
// "O carro Uno √© mais econ√¥mico (R$ 50.40) do que o Onix (R$ 61.00)"
//
// Dica: use if/else para comparar os resultados.
// ==========================================================
